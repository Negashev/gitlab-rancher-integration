apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "gri.fullname" . }}-cron
  labels:
    app.kubernetes.io/name: {{ include "gri.name" . }}
    helm.sh/chart: {{ include "gri.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app: cron
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 10
  jobTemplate:
    spec:
      template:
        spec:
        {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 8 }}
        {{- end }}
          containers:
          - args:
            - python3
            - -u
            - cron.py
            image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            name: {{ .Chart.Name }}-cron
            resources:
              {{- toYaml .Values.cron.resources | nindent 14 }}
            stdin: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            tty: true
            env:
              {{- range $key, $value := $.Values.env }}
              - name: {{ $key }}
                value: {{ $value | quote }}
              {{- end }}
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
  schedule: "{{ .Values.cron.scale_workload }}"
  successfulJobsHistoryLimit: 2
  suspend: false