apiVersion: policy.jspolicy.com/v1beta1
kind: JsPolicy
metadata:
  name: "namespace-to-project.binding.policy"
spec:
  operations: ["CREATE"]
  resources: ["namespaces"]
  type: Mutating
  javascript: |
    const GITLAB_HOOK_TOKEN = env("GITLAB_HOOK_TOKEN");
    const GITLAB_RANCHER_INTEGRATION = env("GITLAB_RANCHER_INTEGRATION");
    const GITLAB_HOST = env("GITLAB_HOST");
    const GITLAB_TOKEN = env("GITLAB_TOKEN");
  
    const regex = /[a-zA-Z0-9-]+-([0-9]{1,})-[a-zA-Z0-9-]+$/g;
    const matches = request.namespace.matchAll(regex);
        
    for (const match of matches) {
      print(match[1]);
      
      // get project
      group = fetchSync(GITLAB_HOST + "/api/v4/projects/" + match[1], {
        headers: {
          "PRIVATE-TOKEN": GITLAB_TOKEN,
        },
      });
      if (group.ok) {
        print("gitlab group id: " + group.json().namespace.id);
        // use fetchSync to make requests to backend servers
        project = fetchSync(GITLAB_RANCHER_INTEGRATION + "/get-project-for-group", {
          headers: {
            "X-GItlab-Token": GITLAB_HOOK_TOKEN,
            "Group-Id": group.json().namespace.id
          },
        });
        if (project.ok) {
          print("projectid: " + project.text);
          mutate(request.object);
        } else {
          print(project.text)
        }
      } else {
        print(group.text)
      }
    }